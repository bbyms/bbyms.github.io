<div class="grid">
  <% var n = 0;
  for(var key in public.duo._data){
    n++ %>
    <div class="snippet">
      <svg width="320" height="320" viewBox="0 0 600 600">
        <defs>
          <filter id=<%= "duotone-filter-" +public.duo._data[key].slug %> color-interpolation-filters="sRGB"
            x="0" y="0" height="100%" width="100%">
            <feColorMatrix type="matrix" values="<%=getColorMatrix( public.duo._data[key].colors)%>" />
            </filter>
          </defs>
          <image width="100%" height="100%" preserveAspectRatio="xMidYMid slice" filter=url(<%= "#duotone-filter-" +public.duo._data[key].slug %>)  xlink:href=<%= public.duo._data[key].image %> />
      </svg>

        <div class="palette-box" style="background:rgb(<%= public.duo._data[key].colors[0] %>);"></div>
        <code><%= public.duo._data[key].colors[0] %></code>
        <div class="palette-box" style="background:rgb(<%= public.duo._data[key].colors[1] %>);"></div>
        <code><%= public.duo._data[key].colors[1] %></code>
    </div>

    <% } %>
</div>



  <% function getColorMatrix(colors) {
    var value = [];
    var color1 = colors[0] || [255, 255, 255];
    var color2 = colors[1] || [0, 0, 0];
    value = value.concat([color1[0]/256 - color2[0]/256, 0, 0, 0, color2[0]/256]);
    value = value.concat([color1[1]/256 - color2[1]/256, 0, 0, 0, color2[1]/256]);
    value = value.concat([color1[2]/256 - color2[2]/256, 0, 0, 0, color2[2]/256]);
    value = value.concat([0, 0, 0, 1, 0]);
    return value.join(' ');
  } %>
